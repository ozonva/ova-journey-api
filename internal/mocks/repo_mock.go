// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozonva/ova-journey-api/internal/repo (interfaces: Repo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozonva/ova-journey-api/internal/models"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// AddJourney mocks base method.
func (m *MockRepo) AddJourney(arg0 context.Context, arg1 models.Journey) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddJourney", arg0, arg1)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddJourney indicates an expected call of AddJourney.
func (mr *MockRepoMockRecorder) AddJourney(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddJourney", reflect.TypeOf((*MockRepo)(nil).AddJourney), arg0, arg1)
}

// DescribeJourney mocks base method.
func (m *MockRepo) DescribeJourney(arg0 context.Context, arg1 uint64) (*models.Journey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeJourney", arg0, arg1)
	ret0, _ := ret[0].(*models.Journey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeJourney indicates an expected call of DescribeJourney.
func (mr *MockRepoMockRecorder) DescribeJourney(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeJourney", reflect.TypeOf((*MockRepo)(nil).DescribeJourney), arg0, arg1)
}

// ListJourneys mocks base method.
func (m *MockRepo) ListJourneys(arg0 context.Context, arg1, arg2 uint64) ([]models.Journey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListJourneys", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.Journey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListJourneys indicates an expected call of ListJourneys.
func (mr *MockRepoMockRecorder) ListJourneys(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListJourneys", reflect.TypeOf((*MockRepo)(nil).ListJourneys), arg0, arg1, arg2)
}

// MultiAddJourneys mocks base method.
func (m *MockRepo) MultiAddJourneys(arg0 context.Context, arg1 []models.Journey) ([]uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MultiAddJourneys", arg0, arg1)
	ret0, _ := ret[0].([]uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MultiAddJourneys indicates an expected call of MultiAddJourneys.
func (mr *MockRepoMockRecorder) MultiAddJourneys(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MultiAddJourneys", reflect.TypeOf((*MockRepo)(nil).MultiAddJourneys), arg0, arg1)
}

// RemoveJourney mocks base method.
func (m *MockRepo) RemoveJourney(arg0 context.Context, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveJourney", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveJourney indicates an expected call of RemoveJourney.
func (mr *MockRepoMockRecorder) RemoveJourney(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveJourney", reflect.TypeOf((*MockRepo)(nil).RemoveJourney), arg0, arg1)
}

// UpdateJourney mocks base method.
func (m *MockRepo) UpdateJourney(arg0 context.Context, arg1 models.Journey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJourney", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJourney indicates an expected call of UpdateJourney.
func (mr *MockRepoMockRecorder) UpdateJourney(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJourney", reflect.TypeOf((*MockRepo)(nil).UpdateJourney), arg0, arg1)
}
